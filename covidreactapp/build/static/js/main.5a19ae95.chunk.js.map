{"version":3,"sources":["Components/Navbar.js","Pages/Register.js","Pages/login.js","Pages/HomeComponents/MainHome.js","Pages/HomeComponents/Map.js","Pages/home.js","Pages/logout.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","toggle","state","status","setState","value","localStorage","getItem","isLoggedIn","console","log","JSX","className","to","role","aria-label","style","fontSize","fontWeight","href","onClick","this","aria-expanded","data-target","aria-hidden","id","Component","Register","onSubmit","e","a","preventDefault","isPending","email","target","password","name","phone","fetch","headers","method","body","JSON","stringify","response","json","data","isRegistered","setItem","onChange","class","max","type","placeholder","login","alert","statusCode","userData","loggedIn","padding","Map","defaultZoom","defaultCenter","lat","lng","position","center","radius","WrappedMap","withScriptjs","withGoogleMap","height","margin","googleMapURL","loadingElement","containerElement","width","mapElement","home","getCurrentLocation","self","navigator","geolocation","getCurrentPosition","location","lan","coords","latitude","long","longitude","acc","accuracy","endpoint","Date","bind","setTimeout","logout","App","path","exact","component","Login","Home","Logout","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"2TAqHeA,E,kDAjHX,WAAYC,GAAQ,IAAD,uBACf,cAAMA,IA8CVC,OAAS,YACoB,IAAtB,EAAKC,MAAMC,OACV,EAAKC,SAAS,CAACD,QAAO,IAEtB,EAAKC,SAAS,CAACD,QAAO,KAjD1B,IAAIE,GAAQ,EAFG,OAIXA,EADqC,QAAtCC,aAAaC,QAAQ,cAOxB,EAAKL,MAAQ,CACLC,QAAO,EACPK,WAAWH,GAInBI,QAAQC,IAAI,EAAKR,MAAMM,YAatB,EAAKG,IAAM,yBAAKC,UAAU,cAC3B,yBAAKA,UAAU,eACb,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,qBAC7B,4CAEF,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,mBAAvB,aAnCW,E,qDAyDf,OACI,yBAAKA,UAAU,SAASE,KAAK,aAAaC,aAAW,mBACzD,yBAAKH,UAAU,gBACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAcI,MAAO,CAACC,SAAS,OAAOC,WAAW,MAAxE,kBAIA,uBAAGC,KAAK,gBAAgBL,KAAK,SAASM,QAASC,KAAKpB,OAAQW,UAAU,uBAAuBG,aAAW,OAAOO,gBAAc,QAAQC,cAAY,sBAC/I,0BAAMC,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAItB,yBAAKC,GAAG,qBAAqBb,WAAiC,IAAtBS,KAAKnB,MAAMC,OAAkB,wBAAwB,eAC3F,yBAAKS,UAAU,gBACb,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,cAAcO,KAAK,SAA9C,QAIA,uBAAGP,UAAU,cAAcO,KAAK,aAAhC,YAIA,yBAAKP,UAAU,yCACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAcO,KAAK,UAA1C,SAIA,yBAAKP,UAAU,mBACb,uBAAGA,UAAU,eAAb,SAGA,uBAAGA,UAAU,eAAb,QAGA,uBAAGA,UAAU,eAAb,WAGA,wBAAIA,UAAU,mBACd,uBAAGA,UAAU,eAAb,sBAOLS,KAAKV,U,GAzGKe,a,yCC8HNC,G,yDA5HX,WAAY3B,GAAQ,IAAD,uBACf,cAAMA,IAuBV4B,SAxBmB,uCAwBR,WAAOC,GAAP,yBAAAC,EAAA,6DACPD,EAAEE,iBACF,EAAK3B,SAAS,CAAC4B,WAAU,IACrBC,EAAQJ,EAAEK,OAAOD,MAAM5B,MACvB8B,EAAWN,EAAEK,OAAOC,SAAS9B,MAC7B+B,EAAOP,EAAEK,OAAOE,KAAK/B,MACrBgC,EAAQR,EAAEK,OAAOG,MAAMhC,MANpB,SAUciC,MAAM,sBAAsB,CAC7CC,QAAQ,CACJ,eAAgB,oBAEpBC,OAAO,OACPC,KAAKC,KAAKC,UAAU,CAChBP,KAAKA,EACLH,MAAMA,EACNI,MAAMA,EACNF,SAASA,MAnBV,cAUHS,EAVG,iBAsBUA,EAASC,OAtBnB,QAsBHC,EAtBG,OAuBPrC,QAAQC,IAAIoC,GAETA,EAAKC,cAAoC,GAArBD,EAAKC,cACxBzC,aAAa0C,QAAQ,cAAa,GAElC,EAAK5C,SAAS,CACVI,YAAW,EACXwB,WAAU,KAGd,EAAK5B,SAAS,CAAC4B,WAAU,IAjCtB,4CAxBQ,wDA8DnBiB,SAAW,SAACpB,GAGR,EAAKzB,SAAL,eACMyB,EAAEK,OAAOE,KAAMP,EAAEK,OAAO7B,SAhE9B,IAAIA,GAAQ,EAFG,MAI0B,QAAtCC,aAAaC,QAAQ,eACpBE,QAAQC,IAAIL,GACZA,GAAQ,GAERA,GAAQ,EAEZ,EAAKH,MAAQ,CACLkC,KAAK,GACLH,MAAM,GACNI,MAAM,GACNF,SAAS,GACT3B,WAAWH,EACX2B,WAAU,GAhBH,E,qDAuEf,OAA4B,GAAzBX,KAAKnB,MAAMM,WACH,kBAAC,IAAD,CAAUK,GAAG,UAGhB,8BACJ,kBAAC,EAAD,MACA,0BAAMe,SAAUP,KAAKO,UACI,GAAxBP,KAAKnB,MAAM8B,UAAoB,8BAAUkB,MAAM,+BAA+BC,IAAI,OAAnD,OAAwE,GACxG,4BAAQnC,MAAO,CAACC,SAAS,OAAOC,WAAW,MAA3C,iBACA,yBAAKgC,MAAM,SACP,2BAAOA,MAAM,SAAb,QACA,yBAAKA,MAAM,WACP,2BAAOzB,GAAG,OAAOW,KAAK,OAAOc,MAAM,QAAQE,KAAK,OAAOC,YAAY,uBAAuBhD,MAAOgB,KAAKnB,MAAMkC,KAAMa,SAAU5B,KAAK4B,aAMzI,yBAAKC,MAAM,SACP,2BAAOA,MAAM,SAAb,SACA,yBAAKA,MAAM,WACP,2BAAOzB,GAAG,QAAQW,KAAK,QAAQc,MAAM,QAAQE,KAAK,QAAQC,YAAY,WAAWhD,MAAOgB,KAAKnB,MAAM+B,MAAOgB,SAAU5B,KAAK4B,aAKjI,yBAAKC,MAAM,SACP,2BAAOA,MAAM,SAAb,SACA,yBAAKA,MAAM,WACP,2BAAOzB,GAAG,QAAQW,KAAK,QAAQc,MAAM,QAAQE,KAAK,SAASC,YAAY,mBAAmBhD,MAAOgB,KAAKnB,MAAMmC,MAAOY,SAAU5B,KAAK4B,YAEtI,uBAAGC,MAAM,QAAT,+CAIJ,yBAAKA,MAAM,SACP,2BAAOA,MAAM,SAAb,YACA,yBAAKA,MAAM,WACP,2BAAOzB,GAAG,WAAWW,KAAK,WAAWc,MAAM,QAAQE,KAAK,WAAWC,YAAY,WAAYhD,MAAOgB,KAAKnB,MAAMiC,SAAUc,SAAU5B,KAAK4B,aAI9I,kBAAC,IAAD,CAAMpC,GAAG,KAAT,2BAEI,yBAAKqC,MAAM,WACX,gCAAQ,4BAAQA,MAAM,qBAAd,kB,GArHDxB,cCqHR4B,E,kDAlHX,WAAYtD,GAAQ,IAAD,uBACf,cAAMA,IAgBT4B,SAjBkB,uCAiBP,WAAOC,GAAP,qBAAAC,EAAA,yDACRD,EAAEE,iBACF,EAAK3B,SAAS,CAAC4B,WAAU,IACrBK,EAAQR,EAAEK,OAAOG,MAAMhC,MACvB8B,EAAWN,EAAEK,OAAOC,SAAS9B,MAE7BgC,GAAUF,EANN,uBAOJ,EAAK/B,SAAS,CAAC4B,WAAU,IACzBuB,MAAM,gCARF,2CAaajB,MAAM,mBAAmB,CAC1CC,QAAQ,CACJ,eAAgB,oBAEpBC,OAAO,OACPC,KAAKC,KAAKC,UAAU,CAChBN,MAAMA,EACNF,SAASA,MApBT,eAaJS,EAbI,iBAuBSA,EAASC,OAvBlB,QAuBJC,EAvBI,OAwBRrC,QAAQC,IAAIoC,GAEU,KAAnBA,EAAKU,YAEJlD,aAAa0C,QAAQ,WAAWN,KAAKC,UAAUG,EAAKW,WAGpDnD,aAAa0C,QAAQ,cAAa,GAClC,EAAK5C,SAAS,CACVsD,UAAS,KAGbH,MAAM,6BAKV,EAAKnD,SAAS,CAAC4B,WAAU,IAzCjB,4CAjBO,wDA6DnBiB,SAAW,SAACpB,GAGR,EAAKzB,SAAL,eACMyB,EAAEK,OAAOE,KAAMP,EAAEK,OAAO7B,SA9D9B,IAAIqD,GAAW,EAHA,OAKXA,EADqC,QAAtCpD,aAAaC,QAAQ,cAKxB,EAAKL,MAAQ,CACLmC,MAAM,GACNF,SAAS,GACTuB,WACA1B,WAAU,GAbH,E,qDAuEf,OAA2B,IAAxBX,KAAKnB,MAAMwD,SACH,kBAAC,IAAD,CAAU7C,GAAG,UAEZ,8BACJ,kBAAC,EAAD,MACyB,GAAxBQ,KAAKnB,MAAM8B,UAAoB,8BAAUkB,MAAM,+BAA+BC,IAAI,OAAnD,OAAwE,GACxG,0BAAMnC,MAAO,CAAC2C,QAAQ,QAAS/B,SAAUP,KAAKO,UAC1C,4GAGJ,4BAAQZ,MAAO,CAACC,SAAS,OAAOC,WAAW,MAA3C,cACA,yBAAKgC,MAAM,SACP,2BAAOA,MAAM,SAAb,SACA,yBAAKA,MAAM,WACP,2BAAOzB,GAAG,QAAQW,KAAK,QAAQc,MAAM,QAAQE,KAAK,SAASC,YAAY,eAAehD,MAAOgB,KAAKnB,MAAMmC,MAAOY,SAAU5B,KAAK4B,aAMtI,yBAAKC,MAAM,SACP,2BAAOA,MAAM,SAAb,YACA,yBAAKA,MAAM,WACP,2BAAOzB,GAAG,WAAWW,KAAK,WAAWc,MAAM,QAAQE,KAAK,WAAWC,YAAY,WAAYhD,MAAOgB,KAAKnB,MAAMiC,SAAUc,SAAU5B,KAAK4B,aAItI,kBAAC,IAAD,CAAMpC,GAAG,aAAT,sBACJ,yBAAKqC,MAAM,WAC5B,oCAAS,4BAAQA,MAAM,qBAAd,aAGA,kC,GAxGQxB,a,kBCJkBA,Y,OCChCkC,E,kDACF,WAAY5D,GAAO,IAAD,6BACd,cAAMA,GAENS,QAAQC,IAAIV,GAHE,E,qDASd,OACI,kBAAC,YAAD,CACI6D,YAAa,GACbC,cAAe,CAACC,IAAI,WAAWC,IAAI,aAEnC,kBAAC,SAAD,CACIC,SAAU,CAACF,IAAI,WAAWC,IAAI,cAElC,kBAAC,SAAD,CAAQE,OAAQ,CAACH,IAAI,WAAWC,IAAI,YAAaG,OAAQ,S,GAlBvDzC,aAwBZ0C,EAAaC,uBAAaC,wBAAcV,IAE/B,WAAS5D,GACpB,OAAO,4BAAQgB,MAAO,CAACuD,OAAO,QAAQC,OAAO,SAAS,kBAACJ,EAAD,CACtDK,aAAY,oFACZC,eAAgB,yBAAK1D,MAAO,CAACuD,OAAO,UACpCI,iBAAkB,yBAAK3D,MAAO,CAAEuD,OAAO,OAAOK,MAAM,UACpDC,WAAY,yBAAK7D,MAAO,CAAEuD,OAAO,cCqMtBO,E,kDA9NX,WAAY9E,GAAQ,IAAD,uBACf,cAAMA,IAsCd+E,mBAAqB,WAEnB,IAAIC,EAAI,eACRC,UAAUC,YAAYC,oBAAmB,SAASC,GAKhDJ,EAAKK,IAAMD,EAASE,OAAOC,SAC3BP,EAAKQ,KAAOJ,EAASE,OAAOG,UAC5BT,EAAKU,IAAMN,EAASE,OAAOK,YAG7BlF,QAAQC,IAAI,EAAK2E,KAEjB,EAAKjF,SAAS,CACZmF,SAAS,EAAKF,IACdI,UAAU,EAAKD,KACfG,SAAS,EAAKD,OAzDK,EAoEnBzF,OAAS,YACoB,IAAtB,EAAKC,MAAMC,OACV,EAAKC,SAAS,CAACD,QAAO,IAGtB,EAAKC,SAAS,CAACD,QAAO,IAG1BM,QAAQC,IAAI,EAAKR,QAxEjB,IAAIG,GAAQ,EAERA,EADqC,QAAtCC,aAAaC,QAAQ,cAKxB,EAAKL,MAAQ,CACTC,QAAO,EACPK,WAAWH,EAEXkF,SAAS,EACTE,UAAU,EACVE,SAAS,EAET/C,UAAU,EACVgD,SAAU,0BAGlBnF,QAAQC,IAAI,IAAImF,MAKhB,EAAKd,mBAAqB,EAAKA,mBAAmBe,KAAxB,gBAE1B,EAAKf,qBACGgB,YAAW,WAES,GAAvB,EAAK7F,MAAMqF,UACZ,EAAKR,uBAEP,KAnCiB,S,qDAkFf,OAA4B,GAAzB1D,KAAKnB,MAAMM,WACH,kBAAC,IAAD,CAAUK,GAAG,MAGhB,6BAEI,yBAAKD,UAAU,SAASE,KAAK,aAAaC,aAAW,mBACjE,yBAAKH,UAAU,gBACb,uBAAGA,UAAU,cAAcO,KAAK,IAAIH,MAAO,CAACC,SAAS,OAAOC,WAAW,MAAvE,kBAIA,uBAAGC,KAAK,gBAAgBL,KAAK,SAASM,QAASC,KAAKpB,OAAQW,UAAU,uBAAuBG,aAAW,OAAOO,gBAAc,QAAQC,cAAY,sBAC/I,0BAAMC,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAItB,yBAAKC,GAAG,qBAAqBb,WAAiC,IAAtBS,KAAKnB,MAAMC,OAAkB,wBAAwB,eAC3F,yBAAKS,UAAU,gBACb,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,cAAcO,KAAK,SAA9C,QAIA,uBAAGP,UAAU,cAAcO,KAAK,aAAhC,YAIA,yBAAKP,UAAU,yCACb,kBAAC,IAAD,CAAMC,GAAG,iBAAiBD,UAAU,cAAcO,KAAK,UAAvD,YAIA,yBAAKP,UAAU,mBACb,uBAAGA,UAAU,eAAb,oBAGA,uBAAGA,UAAU,eAAb,qBAGA,uBAAGA,UAAU,eAAb,WAGA,wBAAIA,UAAU,mBACd,uBAAGA,UAAU,eAAb,cAGA,uBAAGA,UAAU,eAAb,sBASN,yBAAKA,UAAU,cACX,yBAAKA,UAAU,eACb,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,oBAA5B,eAUJ,4BAAQA,UAAU,mBAAmBQ,QAASC,KAAK0D,oBAAnD,gBAEA,+BACE,4BACE,wCAAiB,yCAAkB,yCAErC,4BACJ,4BAAK1D,KAAKnB,MAAMqF,UAAc,4BAAKlE,KAAKnB,MAAMuF,WAAe,4BAAKpE,KAAKnB,MAAMyF,YAGrE,6BAASzC,MAAM,sBACf,yBAAKA,MAAM,kBACP,mDACA,4BAAQA,MAAM,SAASnC,aAAW,YAEtC,yBAAKmC,MAAM,kBAI3B,6BAASA,MAAM,oBACb,uBAAGA,MAAM,iBAAT,WAGA,uBAAGA,MAAM,cACP,uBAAGA,MAAM,aAAT,OACA,qCACA,sCACA,sCACA,qCAEF,yBAAKA,MAAM,eACT,uBAAGA,MAAM,0BACP,2BAAOA,MAAM,mBAAmBE,KAAK,OAAOC,YAAY,WACxD,0BAAMH,MAAM,gBACV,uBAAGA,MAAM,gBAAgB1B,cAAY,YAI3C,uBAAG0B,MAAM,yBACP,0BAAMA,MAAM,cACV,uBAAGA,MAAM,cAAc1B,cAAY,UAFvC,SAMA,uBAAG0B,MAAM,eACP,0BAAMA,MAAM,cACV,uBAAGA,MAAM,cAAc1B,cAAY,UAFvC,aAMA,uBAAG0B,MAAM,eACP,0BAAMA,MAAM,cACV,uBAAGA,MAAM,cAAc1B,cAAY,UAFvC,iBAMA,uBAAG0B,MAAM,eACP,0BAAMA,MAAM,cACV,uBAAGA,MAAM,cAAc1B,cAAY,UAFvC,qBAOU,kBAAC,EAAD,W,GAxNGE,aCiBJsE,E,kDApBX,WAAYhG,GAAQ,IAAD,6BACf,cAAMA,GACNM,aAAa0C,QAAQ,cAAa,GAClC,EAAK9C,MAAQ,GAHE,E,qDASf,OACI,6BACI,kBAAC,EAAD,MADJ,SAII,kBAAC,IAAD,CAAMW,GAAG,KAAT,yB,GAfKa,aCwBNuE,MAlBf,WACE,OAAO,8BAIL,kBAAC,IAAD,KAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,YAAYE,UAAWzE,IACnC,kBAAC,IAAD,CAAOuE,KAAK,QAAQC,OAAK,EAACC,UAAWE,IACrC,kBAAC,IAAD,CAAOJ,KAAK,UAAUE,UAAWG,QCTrBC,QACW,cAA7BC,OAAOrB,SAASsB,UAEe,UAA7BD,OAAOrB,SAASsB,UAEhBD,OAAOrB,SAASsB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmB/B,WACrBA,UAAUgC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9G,QAAQ8G,MAAMA,EAAMC,c","file":"static/js/main.5a19ae95.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let value = false;\r\n        if(localStorage.getItem(\"isLoggedIn\") == \"true\"){\r\n            value = true;\r\n        }else{\r\n          value = false;\r\n        }\r\n\r\n        \r\n        this.state = {\r\n                status:false,\r\n                isLoggedIn:value\r\n        }\r\n\r\n        \r\n        console.log(this.state.isLoggedIn)\r\n\r\n        if(false){\r\n          this.JSX = <div className=\"navbar-end\">\r\n          <div className=\"navbar-item\">\r\n            <div className=\"buttons\">\r\n              <Link to='logout' className=\"button is-danger\">\r\n                Logout\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        }else{\r\n         this.JSX = <div className=\"navbar-end\">\r\n        <div className=\"navbar-item\">\r\n          <div className=\"buttons\">\r\n            <Link to='/register' className=\"button is-primary\">\r\n              <strong>Sign up</strong>\r\n            </Link>\r\n            <Link to='/' className=\"button is-light\">\r\n              Log in\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>;\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    toggle = ()=>{\r\n        if(this.state.status === false){\r\n            this.setState({status:true});\r\n        }else{\r\n            this.setState({status:false})\r\n        }\r\n        \r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n        <div className=\"navbar-brand\">\r\n          <Link to='/' className=\"navbar-item\" style={{fontSize:\"40px\",fontWeight:200}}>\r\n            Stay Quaratine\r\n          </Link>\r\n      \r\n          <a href=\"#ToggleNavbar\" role=\"button\" onClick={this.toggle} className=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n          </a>\r\n        </div>\r\n      \r\n        <div id=\"navbarBasicExample\" className={this.state.status === true ? 'navbar-menu is-active':\"navbar-menu\"}>\r\n          <div className=\"navbar-start\">\r\n            <Link to='/home' className=\"navbar-item\" href=\"#Home\">\r\n              Home\r\n            </Link>\r\n      \r\n            <a className=\"navbar-item\" href=\"#services\">\r\n              Services\r\n            </a>\r\n      \r\n            <div className=\"navbar-item has-dropdown is-hoverable\">\r\n              <Link to='/' className=\"navbar-link\" href=\"#login\">\r\n                Login\r\n              </Link>\r\n      \r\n              <div className=\"navbar-dropdown\">\r\n                <a className=\"navbar-item\">\r\n                  About\r\n                </a>\r\n                <a className=\"navbar-item\">\r\n                  Jobs\r\n                </a>\r\n                <a className=\"navbar-item\">\r\n                  Contact\r\n                </a>\r\n                <hr className=\"navbar-divider\" />\r\n                <a className=\"navbar-item\">\r\n                  Report an issue\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      \r\n          {this.JSX}\r\n        </div>\r\n        \r\n        \r\n      </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar\r\n","import React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Navbar from '../Components/Navbar';\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let value = false\r\n        \r\n        if(localStorage.getItem(\"isLoggedIn\") == \"true\"){\r\n            console.log(value)\r\n            value = true\r\n        }else{\r\n            value = false\r\n        }\r\n        this.state = {\r\n                name:'',\r\n                email:'',\r\n                phone:'',\r\n                password:'',\r\n                isLoggedIn:value,\r\n                isPending:false\r\n        }\r\n        \r\n  \r\n    }\r\n\r\n    \r\n    \r\n    onSubmit = async (e)=>{\r\n        e.preventDefault();\r\n        this.setState({isPending:true})\r\n        let email = e.target.email.value;\r\n        let password = e.target.password.value;\r\n        let name = e.target.name.value;\r\n        let phone = e.target.phone.value;\r\n\r\n        // console.log(email,password,phone,name)\r\n\r\n        let response = await fetch('/api/users/register',{\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method:\"POST\",\r\n            body:JSON.stringify({\r\n                name:name,\r\n                email:email,\r\n                phone:phone,\r\n                password:password\r\n            })\r\n        });\r\n        let data = await response.json()\r\n        console.log(data) \r\n\r\n        if(data.isRegistered&& data.isRegistered == true ){\r\n            localStorage.setItem(\"isLoggedIn\",true);\r\n            \r\n            this.setState({\r\n                isLoggedIn:true,\r\n                isPending:false\r\n            })\r\n        }else{\r\n            this.setState({isPending:false})\r\n        }\r\n\r\n        \r\n    }\r\n    onChange = (e)=>{\r\n       \r\n\r\n        this.setState(\r\n          {  [e.target.name]:e.target.value}\r\n        )\r\n        }\r\n    render() {\r\n\r\n        if(this.state.isLoggedIn == true){\r\n            return <Redirect to='/home' />\r\n        }else{\r\n            \r\n        return (<span>\r\n            <Navbar />\r\n            <form onSubmit={this.onSubmit}>\r\n            {this.state.isPending == true ? <progress class=\"progress is-small is-primary\" max=\"100\">15%</progress>:''}\r\n            <center style={{fontSize:'50px',fontWeight:200}}>Register Form</center>\r\n            <div class=\"field\">\r\n                <label class=\"label\">Name</label>\r\n                <div class=\"control\">\r\n                    <input id='name' name='name' class=\"input\" type=\"text\" placeholder=\"Enter your Full Name\" value={this.state.name} onChange={this.onChange} />\r\n                </div>\r\n                {/* <p class=\"help\">This is a help text</p> */}\r\n            </div>\r\n\r\n            \r\n            <div class=\"field\">\r\n                <label class=\"label\">Email</label>\r\n                <div class=\"control\">\r\n                    <input id='email' name='email' class=\"input\" type=\"email\" placeholder=\"Email ID\" value={this.state.email} onChange={this.onChange} />\r\n                </div>\r\n                {/* <p class=\"help\">This is a help text</p> */}\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n                <label class=\"label\">Phone</label>\r\n                <div class=\"control\">\r\n                    <input id='phone' name='phone' class=\"input\" type=\"number\" placeholder=\"Enter your Phone\" value={this.state.phone} onChange={this.onChange} />\r\n                </div>\r\n                <p class=\"help\">An OTP will be sent to given mobile number</p>\r\n            </div>\r\n\r\n                \r\n            <div class=\"field\">\r\n                <label class=\"label\">Password</label>\r\n                <div class=\"control\">\r\n                    <input id='password' name='password' class=\"input\" type=\"password\" placeholder=\"Password\"  value={this.state.password} onChange={this.onChange}  />\r\n                </div>\r\n                {/* <p class=\"help\">This is a help t/ext</p> */}\r\n            </div>\r\n            <Link to='/'>Already have an Account</Link>\r\n                \r\n                <div class=\"control\">\r\n                <center><button class=\"button is-primary\">Submit</button></center>\r\n                </div>\r\n        </form>\r\n        </span>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default Register\r\n","import React, { Component } from 'react'\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { get } from 'mongoose';\r\nimport Register from './Register';\r\nimport Navbar from '../Components/Navbar';\r\n\r\nclass login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        let loggedIn = false;\r\n        if(localStorage.getItem(\"isLoggedIn\") == \"true\"){\r\n            loggedIn = true;\r\n        }else{\r\n            loggedIn = false;\r\n        }\r\n        this.state = {\r\n                phone:'',\r\n                password:'',\r\n                loggedIn,\r\n                isPending:false\r\n        }\r\n    }\r\n\r\n     onSubmit = async (e)=>{\r\n        e.preventDefault();\r\n        this.setState({isPending:true})\r\n        let phone = e.target.phone.value;\r\n        let password = e.target.password.value;\r\n\r\n        if(!phone || !password){\r\n            this.setState({isPending:false})\r\n            alert(\"Phone and Password are Empty\")\r\n            return;\r\n        }\r\n\r\n\r\n        let response = await fetch('/api/users/login',{\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method:\"POST\",\r\n            body:JSON.stringify({\r\n                phone:phone,\r\n                password:password\r\n            })\r\n        });\r\n        let data = await response.json()\r\n        console.log(data) \r\n\r\n        if(data.statusCode == 200){\r\n\r\n            localStorage.setItem(\"userData\",JSON.stringify(data.userData))\r\n\r\n\r\n            localStorage.setItem(\"isLoggedIn\",true);\r\n            this.setState({\r\n                loggedIn:true\r\n            })\r\n        }else{\r\n            alert(\"Login Details are Invalid\")\r\n        }\r\n\r\n\r\n\r\n        this.setState({isPending:false})\r\n        \r\n    }\r\n    onChange = (e)=>{\r\n       \r\n\r\n        this.setState(\r\n          {  [e.target.name]:e.target.value}\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.state.loggedIn === true){\r\n            return <Redirect to='/home' />\r\n        }else{\r\n            return (<span>\r\n                <Navbar />\r\n                {this.state.isPending == true ? <progress class=\"progress is-small is-primary\" max=\"100\">15%</progress>:''}\r\n                <form style={{padding:\"20px\"}} onSubmit={this.onSubmit}>\r\n                    <small>\r\n                        Please give us Location Access, so that we can give you our best services\r\n                    </small>\r\n                <center style={{fontSize:'50px',fontWeight:200}}>Login Form</center>\r\n                <div class=\"field\">\r\n                    <label class=\"label\">Phone</label>\r\n                    <div class=\"control\">\r\n                        <input id='phone' name='phone' class=\"input\" type=\"number\" placeholder=\"Phone Number\" value={this.state.phone} onChange={this.onChange} />\r\n                    </div>\r\n                    {/* <p class=\"help\">This is a help text</p> */}\r\n                    </div>\r\n    \r\n                    \r\n                <div class=\"field\">\r\n                    <label class=\"label\">Password</label>\r\n                    <div class=\"control\">\r\n                        <input id='password' name='password' class=\"input\" type=\"password\" placeholder=\"Password\"  value={this.state.password} onChange={this.onChange}  />\r\n                    </div>\r\n                    {/* <p class=\"help\">This is a help t/ext</p> */}\r\n                    </div>\r\n                        <Link to='/register'>Create New Account</Link>\r\n                    <div class=\"control\">\r\n   <center> <button class=\"button is-primary\">Submit</button></center>\r\n    </div>\r\n            </form> \r\n            <hr />\r\n          \r\n            </span>);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    \r\n}\r\n\r\nexport default login\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class MainHome extends Component {\r\n    \r\n   render() {\r\n       // center the map somewhere in London\r\n       const center = {\r\n           lat: 51.5,\r\n           lng: 0,\r\n       };\r\n       \r\n       return (\r\n        //    <HEREMap\r\n        //        appId={\"1T1J4fAg3qg9YDjDStZh\"}\r\n        //        appCode={\"4vHoZqVUVTk8I7sCmvt7rEFvfGIiEDp3HIQHWPtVLj0\"}\r\n        //        center={center}\r\n        //        zoom={8}\r\n        //    />\r\n        <span>\r\n            \r\n        </span>\r\n       )\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport { GoogleMap,withScriptjs,withGoogleMap, Marker, Circle } from 'react-google-maps'\r\n\r\nclass Map extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        console.log(props)\r\n\r\n        \r\n    } \r\n\r\n    render(){\r\n        return (\r\n            <GoogleMap\r\n                defaultZoom={22}\r\n                defaultCenter={{lat:22.2267857,lng:73.1868027}} \r\n            >\r\n                <Marker\r\n                    position={{lat:22.2267857,lng:73.1868027}}            \r\n                />\r\n                <Circle center={{lat:22.2267857,lng:73.1868027}} radius={6} />\r\n            </GoogleMap>\r\n        )\r\n    }\r\n}\r\n\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map))\r\n\r\nexport default function(props){\r\n    return <center style={{height:'600px',margin:'30px'}}><WrappedMap\r\n    googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places`} \r\n    loadingElement={<div style={{height:'100%'}} />}\r\n    containerElement={<div style={{ height:'100%',width:'100%' }} />}\r\n    mapElement={<div style={{ height: `100%` }} />}   \r\n    />\r\n    \r\n    \r\n    </center>\r\n};\r\n","import React, { Component } from 'react'\r\nimport './home.css';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport MainHome from './HomeComponents/MainHome';\r\nimport Map from './HomeComponents/Map'\r\n\r\n\r\n\r\nclass home extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n\r\n        let value = true;\r\n        if(localStorage.getItem(\"isLoggedIn\") == \"true\"){\r\n            value = true;\r\n        }else{\r\n            value = false;\r\n        }\r\n        this.state = {\r\n            status:false,\r\n            isLoggedIn:value,\r\n\r\n            latitude:0,\r\n            longitude:0,\r\n            accuracy:0,\r\n\r\n            response: false,\r\n            endpoint: \"http://localhost:5000/\"\r\n    }\r\n\r\n    console.log(new Date())\r\n\r\n\r\n\r\n    \r\n    this.getCurrentLocation = this.getCurrentLocation.bind(this)\r\n\r\n    this.getCurrentLocation()\r\n    let x = setTimeout(()=>{\r\n      \r\n      if(this.state.latitude == 0){\r\n        this.getCurrentLocation();\r\n      }\r\n    },500)\r\n} // end of constructor\r\n\r\n\r\ngetCurrentLocation = ()=>{\r\n          \r\n  var self = this;\r\n  navigator.geolocation.getCurrentPosition(function(location) {\r\n    // console.log(location.coords.latitude);\r\n    // console.log(location.coords.longitude);\r\n    // console.log(location.coords.accuracy );\r\n\r\n    self.lan = location.coords.latitude;\r\n    self.long = location.coords.longitude;\r\n    self.acc = location.coords.accuracy;\r\n    // console.log(self)\r\n  });\r\n  console.log(this.lan)\r\n  \r\n  this.setState({\r\n    latitude:this.lan,\r\n    longitude:this.long,\r\n    accuracy:this.acc\r\n  })\r\n\r\n\r\n\r\n\r\n  \r\n  } // End of GetCurrentLocation()\r\n\r\n\r\n\r\n    toggle = ()=>{\r\n        if(this.state.status === false){\r\n            this.setState({status:true});\r\n            \r\n        }else{\r\n            this.setState({status:false})\r\n        }\r\n\r\n        console.log(this.state)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if(this.state.isLoggedIn == false){\r\n            return <Redirect to='/'></Redirect>\r\n        }else{\r\n            return (\r\n                <div\r\n                >\r\n                    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n        <div className=\"navbar-brand\">\r\n          <a className=\"navbar-item\" href=\"/\" style={{fontSize:\"40px\",fontWeight:200}}>\r\n            Stay Quaratine\r\n          </a>\r\n      \r\n          <a href=\"#ToggleNavbar\" role=\"button\" onClick={this.toggle} className=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n          </a>\r\n        </div>\r\n      \r\n        <div id=\"navbarBasicExample\" className={this.state.status === true ? 'navbar-menu is-active':\"navbar-menu\"}>\r\n          <div className=\"navbar-start\">\r\n            <Link to='/home' className=\"navbar-item\" href=\"#Home\">\r\n              Home\r\n            </Link>\r\n      \r\n            <a className=\"navbar-item\" href=\"#services\">\r\n              Services\r\n            </a>\r\n      \r\n            <div className=\"navbar-item has-dropdown is-hoverable\">\r\n              <Link to='/home/settings' className=\"navbar-link\" href=\"#login\">\r\n                Settings\r\n              </Link>\r\n      \r\n              <div className=\"navbar-dropdown\">\r\n                <a className=\"navbar-item\">\r\n                    Account Settings\r\n                </a>\r\n                <a className=\"navbar-item\">\r\n                Location Services\r\n                </a>\r\n                <a className=\"navbar-item\">\r\n                  Privacy\r\n                </a>\r\n                <hr className=\"navbar-divider\" />\r\n                <a className=\"navbar-item\">\r\n                    Contact Us\r\n                </a>\r\n                <a className=\"navbar-item\">\r\n                  Report an issue\r\n                </a>\r\n              </div>\r\n            </div>\r\n    \r\n            \r\n          </div>\r\n      \r\n          <div className=\"navbar-end\">\r\n              <div className=\"navbar-item\">\r\n                <div className=\"buttons\">\r\n                  <Link to='logout' className=\"button is-danger\">\r\n                    Logout\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n      </nav>\r\n              <button className='button is-danger' onClick={this.getCurrentLocation}>get Location</button>\r\n\r\n              <table>\r\n                <tr>\r\n                  <th>latitude</th><th>longitude</th><th>Accuracy</th>\r\n                </tr>\r\n                <tr>\r\n            <td>{this.state.latitude}</td><td>{this.state.longitude}</td><td>{this.state.accuracy}</td>\r\n                </tr>\r\n              </table>\r\n                    <article class=\"message is-primary\">\r\n                    <div class=\"message-header\">\r\n                        <p>Your Account Details</p>\r\n                        <button class=\"delete\" aria-label=\"delete\"></button>\r\n                    </div>\r\n                    <div class=\"message-body\">\r\n    \r\n                    </div>\r\n                    </article>\r\n    <article class=\"panel is-primary\">\r\n      <p class=\"panel-heading\">\r\n        Primary\r\n      </p>\r\n      <p class=\"panel-tabs\">\r\n        <a class=\"is-active\">All</a>\r\n        <a>Public</a>\r\n        <a>Private</a>\r\n        <a>Sources</a>\r\n        <a>Forks</a>\r\n      </p>\r\n      <div class=\"panel-block\">\r\n        <p class=\"control has-icons-left\">\r\n          <input class=\"input is-primary\" type=\"text\" placeholder=\"Search\" />\r\n          <span class=\"icon is-left\">\r\n            <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <a class=\"panel-block is-active\">\r\n        <span class=\"panel-icon\">\r\n          <i class=\"fas fa-book\" aria-hidden=\"true\"></i>\r\n        </span>\r\n        bulma\r\n      </a>\r\n      <a class=\"panel-block\">\r\n        <span class=\"panel-icon\">\r\n          <i class=\"fas fa-book\" aria-hidden=\"true\"></i>\r\n        </span>\r\n        marksheet\r\n      </a>\r\n      <a class=\"panel-block\">\r\n        <span class=\"panel-icon\">\r\n          <i class=\"fas fa-book\" aria-hidden=\"true\"></i>\r\n        </span>\r\n        minireset.css\r\n      </a>\r\n      <a class=\"panel-block\">\r\n        <span class=\"panel-icon\">\r\n          <i class=\"fas fa-book\" aria-hidden=\"true\"></i>\r\n        </span>\r\n        jgthms.github.io\r\n      </a>\r\n    </article>\r\n                <Map />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default home\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Navbar from '../Components/Navbar'\r\n\r\nclass logout extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        localStorage.setItem(\"isLoggedIn\",false)\r\n        this.state = {\r\n                 \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                Logout\r\n\r\n                <Link to='/'>Go To Login Page</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default logout\r\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport Login from './Pages/login';\nimport Home from './Pages/home';\nimport Logout from './Pages/logout';\n\nimport {BrowserRouter,Switch,Route} from 'react-router-dom'\nimport Register from './Pages/Register';\nfunction App(){\n  return(<span>\n    \n    \n\n    <BrowserRouter>\n    \n      <Switch>\n        <Route path='/' exact component={Login} />\n        <Route path='/register' component={Register} />\n        <Route path='/home' exact component={Home} />\n        <Route path='/logout' component={Logout} />\n      </Switch>\n    </BrowserRouter>\n  </span>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}